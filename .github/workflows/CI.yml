name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  PYTHON_VERSION: '3.8'
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        #target: [x86_64, x86]
        package: [polarsdate]
        #os: [ubuntu-latest, macos-13, windows-32gb-ram]
        os: [ubuntu-latest]
        #architecture: [x86-64, aarch64]
        architecture: [x86-64]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Create source distribution
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: >
            --manifest-path Cargo.toml
            --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: sdist-${{ matrix.package }}
          overwrite: true
          path: dist/*.tar.gz
      - name: Output sdist artifact ID
        run:  echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }}'
      - name: Build wheel
        uses: PyO3/maturin-action@v1
        with:
          command: build
          target: ${{ steps.target.outputs.target }}
          args: >
            --release
            --manifest-path Cargo.toml
            --out dist
          manylinux: ${{ matrix.architecture == 'aarch64' && '2_24' || 'auto' }}
      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: wheel-${{ matrix.package }}-${{ matrix.os }}-${{ matrix.architecture }}
          path: dist/*.whl
      - name: Output wheel artifact ID
        run:  echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }}'

  publish-to-pypi:
    needs: [build]
    environment:
      name: release-python
      url: https://pypi.org/project/polarsdate
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Download sdists and wheels
        uses: actions/download-artifact@v3
        with:
          path: dist
          merge-multiple: true
      - name: Publish to PyPI
        if: inputs.dry-run == false
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
